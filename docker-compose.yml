version: '3.3'

services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: geo_travel_backend
    restart: always
    env_file:
      - .env
    environment:
      DB_URL: jdbc:postgresql://db:5432/${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      APP_PORT: ${APP_PORT}
      WEATHER_TOKEN: ${WEATHER_TOKEN}
      PASSWORD_SOLE: ${PASSWORD_SOLE}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - db
    command: "java -jar /app/target/app-0.0.1-SNAPSHOT.jar"

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app

volumes:
  postgres_data: